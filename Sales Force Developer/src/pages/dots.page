<apex:page >
<style>
  .active {
    stroke: #000;
    stroke-width: 2px;
  }
  body {
    font: 10px sans-serif;
  }

  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }
/* .line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
} */

</style>

<h2> Potential and Probability</h2>
<div id="my-d3"/>

<script src="https://d3js.org/d3.v4.min.js"></script>
  <script>

   var data = d3.range(40).map(function(i) {
     return i % 5 ? {x: i / 39, y: (Math.sin(i / 3) + 2) / 4} : null;
   });

   var margin = {top: 0, right: 20, bottom: 0, left: 20},
       width = 600,
       height = 400,
       radius = 20,
       diff = 200;

  var x = d3.scaleLinear()
      .range([0, width]);

  var y = d3.scaleLinear()
      .range([height, 0]);

  // var line = d3.line()
  //     .defined(function(d) { return d; })
  //     .x(function(d) { return x(d.x); })
  //     .y(function(d) { return y(d.y); });

  var svg = d3.select("div#my-d3").append("svg")
                      .datum(data)
                      .attr("width", width + margin.left + margin.right)
                      .attr("height", height + margin.top + margin.bottom)
                      .style("border", "0px solid black")
                      .append("g")
                      .attr("transform", "translate("+ margin.left + "," + margin.top + ")");

  var datax = ['High Potential', 'Potential', 'Low Potential'];
  var datay = ['Low Probability', 'Probability','High Probability'];

  svg.selectAll().data(datax).enter().append("text")
      .attr("x", function(d, i) {
      return 70;
      })
      .attr("y", function(d, i) {
        return  i * 180 + 20   //?i==0 ,20,0
      })
      .attr("font-size", function (d, i) {
          return 20;
      })
      .text(function(d) {
        return d;
      });

  svg.append("rect")
                                 .attr("x", diff+radius)
                                  .attr("y", 0)
                                  .attr("width", width-diff)
                                  .attr("height", height)
                                  .attr("stroke", "black ")
                                  .attr("stroke-width", 1)
                                  .style("fill", 'white');

                                  console.log(diff);
                                  console.log(width-diff)
                                  console.log(height)

  svg.append("g")
      .attr("class", "x axis")
      //.attr("transform", "translate(0," + x.range()[0] /2 + ")")
      .attr("transform", "translate("+220+"," + height/2 +")")
      .call(d3.axisBottom(x).tickValues([]));

  svg.append("g")
      .attr("class", "y axis")
      .attr("transform", "translate(" + (width+diff+radius+radius) /2 +")")
      .call(d3.axisLeft(y).tickValues([]));



		//var width = +svg.attr("width"),
		//    height = +svg.attr("height");

		// var circles = d3.range(10).map(function() {
		//   return {
		//         x: Math.round(Math.random() * (width - radius * 2) + radius),
		//         y: Math.round(Math.random() * (height - radius * 2) + radius)
		//         };
		// });
/*
si 100000 = 100 %
100000 /1000
el otro viene en % 100% = 400
100 * 4
*/

    var circles = [{x: 100, y: 100000},
      {x: 10, y: 90000},
      {x: 20, y: 80000},
      {x: 70, y: 70000},
      {x: 60, y: 60000},
      {x: 50, y: 50000},
      {x: 90, y: 40000},
      {x: 30, y: 30000},
      {x: 80, y: 20000},
      {x: 10, y: 10000}]


      for (i = 0; i < circles.length; i++) {
        circles[i].x = circles[i].x * 3.8+diff+radius;
        circles[i].y = height+radius - (circles[i].y / 1000) * 4;
        }

    console.log(circles);
		var color = d3.scaleOrdinal()
		    .range(d3.schemeCategory20);

		svg.selectAll("circle")
		  .data(circles)
		  .enter().append("circle")
		    .attr("cx", function(d) { return d.x; })
		    .attr("cy", function(d) { return d.y; })
		    .attr("r", radius/2)
		    .style("fill", function(d, i) { return color(i); });
	</script>

</apex:page>



